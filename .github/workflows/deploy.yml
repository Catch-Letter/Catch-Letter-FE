name: Deploy to S3 (Preview or Production)

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Build Project
        run: npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 🧪 PR 열릴 때 → 스테이징 S3로 배포
      - name: Deploy to Staging (PR preview)
        if: github.event.pull_request.merged != true
        run: aws s3 sync dist/ s3://catch-letter-staging --delete

      # 🚀 PR 머지될 때 → 프로덕션 S3로 배포
      - name: Deploy to Production
        if: github.event.pull_request.merged == true
        run: aws s3 sync dist/ s3://catch-letter-frontend --delete

      # ✅ 머지된 경우만 CloudFront 무효화
      - name: Invalidate CloudFront
        if: github.event.pull_request.merged == true
        run: |
          aws cloudfront create-invalidation \
            --distribution-id E2IK8TPHDQWIOK \
            --paths "/*"

      - name: Comment on PR
        uses: thollander/actions-comment-pull-request@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          message: |
            🎉 배포 완료!
            👉 Preview: https://catch-letter-staging.s3-website.ap-northeast-2.amazonaws.com
            👉 실배포: https://catchletter.kr (PR 머지 시 자동 반영)
